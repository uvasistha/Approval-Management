[{"D:\\Project\\Personal\\Approval-Management\\my-app\\src\\App.js":"1","D:\\Project\\Personal\\Approval-Management\\my-app\\src\\Dash.js":"2","D:\\Project\\Personal\\Approval-Management\\my-app\\src\\AddPopup.js":"3","D:\\Project\\Personal\\Approval-Management\\my-app\\src\\EditPopup.js":"4"},{"size":170,"mtime":1606297269629,"results":"5","hashOfConfig":"6"},{"size":10637,"mtime":1606487591600,"results":"7","hashOfConfig":"6"},{"size":4099,"mtime":1606486846775,"results":"8","hashOfConfig":"6"},{"size":3167,"mtime":1606486569959,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"210vi7",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"D:\\Project\\Personal\\Approval-Management\\my-app\\src\\App.js",["20"],"D:\\Project\\Personal\\Approval-Management\\my-app\\src\\Dash.js",["21","22"],"import React from 'react';\r\nimport AddPopup from './AddPopup.js';\r\nimport EditPopup from './EditPopup.js';\r\n\r\nclass Dash extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            level : 0,\r\n            orderList : [{\r\n                orderDate : \"01/01/2020\",\r\n                approvedBy :\"David_Lee\",\r\n                orderID :\"0001\",\r\n                companyName : \"ABCDE\",\r\n                companyID : \"XYZ1\",\r\n                orderAmount : \"5000\",\r\n                approvalStatus :\"Approved\",\r\n                Notes :\"Notes\"\r\n            },\r\n            {\r\n                orderDate : \"01/01/2020\",\r\n                approvedBy :\"\",\r\n                orderID :\"0002\",\r\n                companyName : \"ABCDE\",\r\n                companyID : \"XYZ2\",\r\n                orderAmount : \"12000\",\r\n                approvalStatus :\"Awaiting Approval\",\r\n                Notes :\"Notes\"\r\n            },\r\n            {\r\n                orderDate : \"01/01/2020\",\r\n                approvedBy :\"\",\r\n                orderID :\"0003\",\r\n                companyName : \"ABCDE\",\r\n                companyID : \"XYZ3\",\r\n                orderAmount : \"250000\",\r\n                approvalStatus :\"Awaiting Approval\",\r\n                Notes :\"Notes\"\r\n            }\r\n            ],\r\n            searchValueText : \"\",\r\n            addMode : false,\r\n            checkedId : -1,\r\n            editMode :false,\r\n            totalPage :3,\r\n            currentPage:1,\r\n        };\r\n        this.onAdd = this.onAdd.bind(this)\r\n        this.onEdit = this.onEdit.bind(this)\r\n        this.onApprove = this.onApprove.bind(this)\r\n        this.onReject = this.onReject.bind(this)\r\n        this.onSearch = this.onSearch.bind(this)\r\n        this.hideAddPopup = this.hideAddPopup.bind(this);\r\n        this.hideEditPopup = this.hideEditPopup.bind(this);\r\n        this.onCheck = this.onCheck.bind(this)\r\n        this.onSearchTextChange = this.onSearchTextChange.bind(this)\r\n        this.getRecordForPage =this.getRecordForPage.bind(this)\r\n\r\n    }\r\n\r\n    //MOUNT LOGIC\r\n    componentDidMount(){\r\n        //first time\r\n        //GET order List from backend and fill the orderList Array\r\n        this.getRecordForPage(1)\r\n    }\r\n\r\n    //ADD LOGIC\r\n    hideAddPopup(){\r\n        this.setState({addMode:false})\r\n        //refersh fro new orders\r\n        //BACKEND CALL -> add new order here\r\n        this.getRecordForPage(this.state.currentPage)\r\n    }\r\n    onAdd(){\r\n        this.setState({addMode:true})\r\n    }\r\n\r\n    //EDIT LOGIC\r\n    onEdit(){\r\n        this.setState({editMode:true})\r\n    }\r\n    hideEditPopup(){\r\n        this.setState({editMode:false})\r\n        //refersh fro new orders\r\n        //BACKEND CALL -> edit orders here\r\n        this.getRecordForPage(this.state.currentPage)\r\n        //uncheck post edit\r\n        if(this.state.checkedId!==-1)\r\n        document.getElementById(this.state.checkedId).click()\r\n    }\r\n\r\n    //CheckBox Magic\r\n    onCheck(e){\r\n        var id = e.target.id\r\n        //make it behave like radio\r\n        if(this.state.checkedId!==id && this.state.checkedId!==-1)\r\n        document.getElementById(this.state.checkedId).click()\r\n        if(e.target.checked){\r\n        this.setState({checkedId:id})\r\n        }\r\n        else{\r\n        this.setState({checkedId:-1})\r\n        }\r\n    }\r\n\r\n    //APPROVE LOGIC\r\n    onApprove(){\r\n        // Save to backend\r\n         var orderID = this.state.orderList[this.state.checkedId.toString().substr(9)].orderID\r\n        //API HERE\r\n        //CALL approve?orderID&level -> approve\r\n        //refreshForOrderList\r\n        this.getRecordForPage(this.state.currentPage)\r\n        //uncheck post approve\r\n        if(this.state.checkedId!==-1)\r\n        document.getElementById(this.state.checkedId).click()\r\n    }\r\n\r\n    //REJECT LOGIC\r\n    onReject(){\r\n        // Save to backend\r\n        var orderID = this.state.orderList[this.state.checkedId.toString().substr(9)].orderID\r\n        //API HERE\r\n        //CALL approve?orderID&level ->reject\r\n        //refreshForOrderList\r\n        this.getRecordForPage(this.state.currentPage)\r\n        //uncheck post reject\r\n        if(this.state.checkedId!==-1)\r\n        document.getElementById(this.state.checkedId).click()\r\n    }\r\n\r\n    //SEARCH LOGIC\r\n    onSearch(event){\r\n        if(event.key ==='Enter'){\r\n            //searchBackedWithFilter\r\n            //fill orderList\r\n            //set page number to 1 and total page to 1\r\n            this.setState({\r\n                currentPage:1,\r\n                totalPage:1\r\n            })\r\n        }\r\n    }\r\n    onSearchTextChange(e){\r\n        this.setState({searchValueText:e.target.value})\r\n        if(e.target.value===\"\"){\r\n            console.log(\"Reset Search\")\r\n            this.getRecordForPage(1)\r\n            this.setState({currentPage:1})\r\n        }\r\n    }\r\n\r\n    //PAGINATION\r\n    onFirstPage(){\r\n        this.setState({currentPage:1})\r\n        this.getRecordForPage(1)\r\n    }\r\n    onPrevPage(){\r\n        var page = this.state.currentPage-1\r\n        if(page<1)\r\n        page =1\r\n        this.setState({currentPage:page})\r\n        this.getRecordForPage(page)\r\n    }\r\n    onNextPage(){\r\n        var page = this.state.currentPage+1\r\n        if(page>this.state.totalPage)\r\n        page =this.state.totalPage\r\n        this.setState({currentPage:page})\r\n        this.getRecordForPage(page)\r\n    }\r\n    onLastPage(){\r\n        this.setState({currentPage:this.state.totalPage})\r\n        this.getRecordForPage(this.state.totalPage)\r\n    }\r\n\r\n    getRecordForPage(page){\r\n        //Call Api with page number\r\n        console.log(\"Get record for page \" +page)\r\n        //Set Record dataList\r\n        //Update TotalPage\r\n    }\r\n\r\n    //APPROVE REJECT LOGIC\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>LOGO 1 </div>\r\n                <div>LOGO 2 </div>\r\n                {this.state.level===0?\r\n                <div>\r\n                <button onClick={this.onAdd}>ADD</button>\r\n                {this.state.checkedId!==-1?\r\n                <button onClick={this.onEdit}>EDIT</button>\r\n                :<button disabled>EDIT</button>}\r\n                </div>\r\n                :null}\r\n\r\n                {this.state.level!==0?\r\n                <div>\r\n                {(this.state.checkedId!==-1)?\r\n                <div>\r\n                <button onClick={this.onApprove}>APPROVE</button>\r\n                <button onClick={this.onReject}>REJECT</button>\r\n                </div>\r\n                :\r\n                <div>\r\n                <button disabled>APPROVE</button>\r\n                <button disabled>REJECT</button>\r\n                 </div>\r\n                }\r\n                </div>\r\n                :null}\r\n\r\n                <input type =\"search\" onKeyPress={this.onSearch} onChange={this.onSearchTextChange} value = {this.state.searchValueText} placeholder=\"Search\"/>\r\n                <table>\r\n                    <thead>\r\n                    <tr style={{border :'2'}}>\r\n                         <th> Select</th>\r\n                         <th> Order Date </th>\r\n                         <th> Approved By </th>\r\n                         <th> Order ID </th>\r\n                         <th> Company Name </th>\r\n                         <th> Company ID </th>\r\n                         <th> Order Amount </th>\r\n                         <th> Approval Status </th>\r\n                         <th> Notes </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                   {\r\n                       this.state.orderList.map(\r\n                           (rowData,key)=>{\r\n                               return(\r\n                               <tr id={key}>\r\n                                   <td> <label><input type =\"checkbox\" id={\"tableData\"+key} onChange={this.onCheck} name=\"tableCheck\" /> </label> </td>\r\n                                   <td>{rowData.orderDate}</td>\r\n                                   <td>{rowData.approvedBy}</td>\r\n                                   <td>{rowData.orderID}</td>\r\n                                   <td>{rowData.companyName}</td>\r\n                                   <td>{rowData.companyID}</td>\r\n                                   <td>{rowData.orderAmount}</td>\r\n                                   <td>{rowData.approvalStatus}</td>\r\n                                   <td>{rowData.Notes}</td>\r\n                               </tr>)\r\n                           }\r\n                       )\r\n                   }\r\n                   </tbody>\r\n                </table>\r\n                <div>\r\n                    {this.state.currentPage===1\r\n                    ?<button onClick={this.onFirstPage.bind(this)} disabled>first</button>\r\n                    :<button onClick={this.onFirstPage.bind(this)}>first</button>\r\n                    }\r\n                    {this.state.currentPage===1\r\n                    ?<button onClick={this.onPrevPage.bind(this)} disabled>prve</button>\r\n                    :<button onClick={this.onPrevPage.bind(this)}>prev</button>\r\n                    }\r\n                    Page\r\n                    <button>{this.state.currentPage}</button>\r\n                    of {this.state.totalPage}\r\n                    {this.state.currentPage===this.state.totalPage\r\n                    ?<button onClick={this.onNextPage.bind(this)}disabled>next</button>\r\n                    :<button onClick={this.onNextPage.bind(this)}>next</button>\r\n                    }\r\n                    {this.state.currentPage===this.state.totalPage\r\n                    ?<button onClick={this.onLastPage.bind(this)}disabled>last</button>\r\n                    :<button onClick={this.onLastPage.bind(this)}>last</button>\r\n                    }\r\n                \r\n                </div>\r\n                <AddPopup show={this.state.addMode} setShow={this.hideAddPopup}/>\r\n                { this.state.checkedId===-1?null:\r\n                <div>\r\n                <EditPopup show={this.state.editMode} setShow={this.hideEditPopup}\r\n                orderID = {this.state.orderList[this.state.checkedId.toString().substr(9)].orderID}\r\n                orderAmount = { this.state.orderList[this.state.checkedId.toString().substr(9)].orderAmount}\r\n                Notes ={ this.state.orderList[this.state.checkedId.toString().substr(9)].Notes}\r\n                approvalBy ={ this.state.orderList[this.state.checkedId.toString().substr(9)].orderAmount<=10000?\"David_Lee\":this.state.orderList[this.state.checkedId.toString().substr(9)].orderAmount>50000?\"Matthew_Vance\":\"Laura_Smith\"}\r\n                />\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Dash;","D:\\Project\\Personal\\Approval-Management\\my-app\\src\\AddPopup.js",["23"],"D:\\Project\\Personal\\Approval-Management\\my-app\\src\\EditPopup.js",["24"],"import React from 'react';\r\n\r\nclass EditPopup extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            orderID : this.props.orderID,\r\n            orderAmount : this.props.orderAmount,\r\n            Notes : this.props.Notes,\r\n            approvalBy : this.props.approvalBy,\r\n            show :this.props.show,\r\n        }\r\n        this.onClose= this.onClose.bind(this)\r\n        this.onSave= this.onSave.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            orderID : nextProps.orderID,\r\n            orderAmount : nextProps.orderAmount,\r\n            Notes : nextProps.Notes,\r\n            approvalBy : nextProps.approvalBy,\r\n            show :nextProps.show,\r\n        });\r\n    }\r\n\r\n    onClose(){\r\n        this.setState({\r\n            orderID :\"\",\r\n            orderAmount : \"\",\r\n            Notes :\"\",\r\n            approvalBy :\"\",\r\n            show :false, \r\n        })\r\n        this.props.setShow()\r\n    }\r\n\r\n    onSave(){\r\n\r\n        //payload\r\n        console.log(this.state.orderID+this.state.orderAmount+this.state.Notes)\r\n        //send to backend\r\n        //CALL HERE\r\n        \r\n        //reset\r\n        this.setState({\r\n            orderID :\"\",\r\n            orderAmount : \"\",\r\n            Notes :\"\",\r\n            approvalBy :\"\",\r\n            show :false, \r\n        })\r\n        this.props.setShow()\r\n\r\n    }\r\n\r\n\r\n    //Text Changes\r\n    onIDchange(e){\r\n        this.setState({orderID:e.target.value})\r\n    }\r\n    onOrderAmount(e){\r\n        this.setState({orderAmount:e.target.value})\r\n        if(e.target.value<=10000 || e.target.value == \"\")\r\n        this.setState({approvalBy:\"David_Lee\"})\r\n        else if(e.target.value>10000 && e.target.value<=50000)\r\n        this.setState({approvalBy:\"Laura_Smith\"})\r\n        else\r\n        this.setState({approvalBy:\"Matthew_Vance\"})\r\n    }\r\n    onNotes(e){\r\n        this.setState({Notes:e.target.value})\r\n    }\r\n    onapprovalBy(e){\r\n        this.setState({approvalBy:e.target.value})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.show !== true)\r\n        return null\r\n        return(\r\n            <div>\r\n                <div>EDIT ORDER</div>\r\n                <div> <button onClick={this.onClose}>Close</button></div>\r\n                <div>\r\n                    Order ID\r\n                    <input type = \"text\" value={this.state.orderID} onChange={this.onIDchange.bind(this)} disabled/>\r\n                </div>\r\n                <div>\r\n                    Order Amount  \r\n                    <input type = \"text\" value={this.state.orderAmount} onChange={this.onOrderAmount.bind(this)}/>\r\n                </div>\r\n                <div>\r\n                    Notes\r\n                    <input type = \"text\" value={this.state.Notes} onChange={this.onNotes.bind(this)}/>\r\n                </div>\r\n                <div>\r\n                    Approval By\r\n                    <input type = \"text\" value={this.state.approvalBy} onChange={this.onapprovalBy.bind(this)} disabled/>\r\n                </div>\r\n                <button onClick={this.onSave}>SUBMIT</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EditPopup;",{"ruleId":"25","severity":1,"message":"26","line":1,"column":8,"nodeType":"27","messageId":"28","endLine":1,"endColumn":12},{"ruleId":"25","severity":1,"message":"29","line":111,"column":14,"nodeType":"27","messageId":"28","endLine":111,"endColumn":21},{"ruleId":"25","severity":1,"message":"29","line":124,"column":13,"nodeType":"27","messageId":"28","endLine":124,"endColumn":20},{"ruleId":"30","severity":1,"message":"31","line":82,"column":52,"nodeType":"32","messageId":"33","endLine":82,"endColumn":54},{"ruleId":"30","severity":1,"message":"31","line":65,"column":52,"nodeType":"32","messageId":"33","endLine":65,"endColumn":54},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'orderID' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]