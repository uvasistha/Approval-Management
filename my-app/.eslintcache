[{"D:\\Project\\Personal\\Approval-Management\\my-app\\src\\App.js":"1","D:\\Project\\Personal\\Approval-Management\\my-app\\src\\Dash.js":"2","D:\\Project\\Personal\\Approval-Management\\my-app\\src\\AddPopup.js":"3","D:\\Project\\Personal\\Approval-Management\\my-app\\src\\EditPopup.js":"4","D:\\Project\\Personal\\Approval-Management\\my-app\\src\\Login.js":"5"},{"size":210,"mtime":1606633754802,"results":"6","hashOfConfig":"7"},{"size":16200,"mtime":1606647759148,"results":"8","hashOfConfig":"7"},{"size":4620,"mtime":1606639664866,"results":"9","hashOfConfig":"7"},{"size":3595,"mtime":1606639611588,"results":"10","hashOfConfig":"7"},{"size":2172,"mtime":1606632890070,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"210vi7",{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Project\\Personal\\Approval-Management\\my-app\\src\\App.js",["24","25"],"D:\\Project\\Personal\\Approval-Management\\my-app\\src\\Dash.js",["26","27","28","29","30"],"D:\\Project\\Personal\\Approval-Management\\my-app\\src\\AddPopup.js",["31","32"],"import React from 'react';\r\nimport CLOSE from './close.png'\r\n\r\nclass AddPopup extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            orderDate : \"\",\r\n            approvedBy :\"\",\r\n            orderID :\"\",\r\n            companyName : \"\",\r\n            companyID : \"\",\r\n            orderAmount : \"\",\r\n            approvalStatus :\"\",\r\n            Notes :\"\",\r\n            show :this.props.show,\r\n        }\r\n        this.onClose= this.onClose.bind(this)\r\n        this.onSave= this.onSave.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({show: nextProps.show});\r\n    }\r\n\r\n    onClose(){\r\n        this.setState({\r\n            orderDate : \"\",\r\n            approvedBy :\"\",\r\n            orderID :\"\",\r\n            companyName : \"\",\r\n            companyID : \"\",\r\n            orderAmount : \"\",\r\n            approvalStatus :\"\",\r\n            Notes :\"\",\r\n            show :false, \r\n        })\r\n        this.props.setShow()\r\n    }\r\n\r\n    onSave(){\r\n\r\n        //payload\r\n        console.log(this.state.orderID+this.state.orderAmount+this.state.Notes+this.state.companyID+this.state.companyName+this.state.approvalStatus)\r\n        //send to backend\r\n        //CALL HERE\r\n\r\n        //reset\r\n        this.setState({\r\n            orderDate : \"\",\r\n            approvedBy :\"\",\r\n            orderID :\"\",\r\n            companyName : \"\",\r\n            companyID : \"\",\r\n            orderAmount : \"\",\r\n            approvalStatus :\"\",\r\n            Notes :\"\",\r\n            show :false, \r\n        })\r\n        this.props.setShow()\r\n\r\n    }\r\n\r\n     //Text Changes\r\n    onOrderDate(e){\r\n        this.setState({orderDate:e.target.value})\r\n    }\r\n    onapprovedBy(e){\r\n        this.setState({approvedBy:e.target.value})\r\n    }\r\n    onorderID(e){\r\n        this.setState({orderID:e.target.value})\r\n    }\r\n    oncompanyName(e){\r\n        this.setState({companyName:e.target.value})\r\n    }\r\n    oncompanyID(e){\r\n        this.setState({companyID:e.target.value})\r\n    }\r\n    onorderAmount(e){\r\n        this.setState({orderAmount:e.target.value})\r\n        if(e.target.value<=10000 || e.target.value == \"\")\r\n        this.setState({approvedBy:\"David_Lee\", approvalStatus :\"Approved\"})\r\n        else if(e.target.value>10000 && e.target.value<=50000)\r\n        this.setState({approvedBy:\"\", approvalStatus :\"Awaiting Approval\"})\r\n        else\r\n        this.setState({approvedBy:\"\", approvalStatus :\"Awaiting Approval\"})\r\n    }\r\n    onapprovalStatus(e){\r\n        this.setState({approvalStatus:e.target.value})\r\n    }\r\n    onNotes(e){\r\n        this.setState({Notes:e.target.value})\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.state.show !== true)\r\n        return null\r\n        return(\r\n            <div className=\"popupouter\">\r\n                <div className=\"popupinner fontNormal\">\r\n                    <div><font size=\"5\" className = \"fontNormal\">ADD ORDER</font>\r\n                    <img src={CLOSE} style={{width: '15px'}} onClick={this.onClose}/></div>\r\n                    <tr>\r\n                    <td>Order ID </td>\r\n                    <td> <input className=\"textboxpopup\" type = \"text\" value={this.state.orderID} onChange={this.onorderID.bind(this)}/></td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Order Date </td>\r\n                    <td><input className=\"textboxpopup\" type = \"text\" value={this.state.orderDate} onChange={this.onOrderDate.bind(this)}/></td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Customer Name </td>\r\n                    <td> <input className=\"textboxpopup\" type = \"text\" value={this.state.companyName} onChange={this.oncompanyName.bind(this)}/></td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td> Customer Number </td>\r\n                    <td><input className=\"textboxpopup\" type = \"text\" value={this.state.companyID} onChange={this.oncompanyID.bind(this)}/></td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td> Order Amount  </td>\r\n                    <td><input className=\"textboxpopup\" type = \"text\" value={this.state.orderAmount} onChange={this.onorderAmount.bind(this)}/></td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Notes</td>\r\n                    <td><input className=\"textboxpopup\" type = \"text\" value={this.state.Notes} onChange={this.onNotes.bind(this)}/></td>\r\n                    </tr>\r\n                    <button className=\"button\" onClick ={this.onSave}>ADD</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddPopup;","D:\\Project\\Personal\\Approval-Management\\my-app\\src\\EditPopup.js",["33","34"],"import React from 'react';\r\nimport CLOSE from './close.png'\r\nclass EditPopup extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            orderID : this.props.orderID,\r\n            orderAmount : this.props.orderAmount,\r\n            Notes : this.props.Notes,\r\n            approvalBy : this.props.approvalBy,\r\n            show :this.props.show,\r\n        }\r\n        this.onClose= this.onClose.bind(this)\r\n        this.onSave= this.onSave.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            orderID : nextProps.orderID,\r\n            orderAmount : nextProps.orderAmount,\r\n            Notes : nextProps.Notes,\r\n            approvalBy : nextProps.approvalBy,\r\n            show :nextProps.show,\r\n        });\r\n    }\r\n\r\n    onClose(){\r\n        this.setState({\r\n            orderID :\"\",\r\n            orderAmount : \"\",\r\n            Notes :\"\",\r\n            approvalBy :\"\",\r\n            show :false, \r\n        })\r\n        this.props.setShow()\r\n    }\r\n\r\n    onSave(){\r\n\r\n        //payload\r\n        console.log(this.state.orderID+this.state.orderAmount+this.state.Notes)\r\n        //send to backend\r\n        //CALL HERE\r\n        \r\n        //reset\r\n        this.setState({\r\n            orderID :\"\",\r\n            orderAmount : \"\",\r\n            Notes :\"\",\r\n            approvalBy :\"\",\r\n            show :false, \r\n        })\r\n        this.props.setShow()\r\n\r\n    }\r\n\r\n\r\n    //Text Changes\r\n    onIDchange(e){\r\n        this.setState({orderID:e.target.value})\r\n    }\r\n    onOrderAmount(e){\r\n        this.setState({orderAmount:e.target.value})\r\n        if(e.target.value<=10000 || e.target.value == \"\")\r\n        this.setState({approvalBy:\"David_Lee\"})\r\n        else if(e.target.value>10000 && e.target.value<=50000)\r\n        this.setState({approvalBy:\"Laura_Smith\"})\r\n        else\r\n        this.setState({approvalBy:\"Matthew_Vance\"})\r\n    }\r\n    onNotes(e){\r\n        this.setState({Notes:e.target.value})\r\n    }\r\n    onapprovalBy(e){\r\n        this.setState({approvalBy:e.target.value})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.show !== true)\r\n        return null\r\n        return(\r\n            <div className=\"popupouter\">\r\n                <div className=\"popupinner fontNormal\">\r\n                <div><font size=\"5\" className = \"fontNormal\">EDIT ORDER</font>\r\n                    <img src={CLOSE} style={{width: '15px'}} onClick={this.onClose}/></div>\r\n                    <tr>\r\n                       <td> Order ID</td>\r\n                       <td><input className=\"textboxpopup\" type = \"text\" value={this.state.orderID} onChange={this.onIDchange.bind(this)} disabled/></td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Order Amount </td> \r\n                        <td><input className=\"textboxpopup\" type = \"text\" value={this.state.orderAmount} onChange={this.onOrderAmount.bind(this)}/></td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Notes</td>\r\n                    <td><input className=\"textboxpopup\" type = \"text\" value={this.state.Notes} onChange={this.onNotes.bind(this)}/></td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Approval By</td>\r\n                        <td><input className=\"textboxpopup\" type = \"text\" value={this.state.approvalBy} onChange={this.onapprovalBy.bind(this)} disabled/></td>\r\n                    </tr>\r\n                    <button className=\"button\" onClick={this.onSave}>SUBMIT</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EditPopup;","D:\\Project\\Personal\\Approval-Management\\my-app\\src\\Login.js",["35","36"],{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":4,"column":8,"nodeType":"39","messageId":"40","endLine":4,"endColumn":13},{"ruleId":"37","severity":1,"message":"42","line":183,"column":14,"nodeType":"39","messageId":"40","endLine":183,"endColumn":21},{"ruleId":"37","severity":1,"message":"42","line":196,"column":13,"nodeType":"39","messageId":"40","endLine":196,"endColumn":20},{"ruleId":"43","severity":1,"message":"44","line":264,"column":17,"nodeType":"45","endLine":264,"endColumn":50},{"ruleId":"43","severity":1,"message":"44","line":265,"column":17,"nodeType":"45","endLine":265,"endColumn":52},{"ruleId":"46","severity":1,"message":"47","line":319,"column":45,"nodeType":"48","messageId":"49","endLine":319,"endColumn":47},{"ruleId":"46","severity":1,"message":"47","line":83,"column":52,"nodeType":"48","messageId":"49","endLine":83,"endColumn":54},{"ruleId":"43","severity":1,"message":"44","line":105,"column":21,"nodeType":"45","endLine":105,"endColumn":86},{"ruleId":"46","severity":1,"message":"47","line":65,"column":52,"nodeType":"48","messageId":"49","endLine":65,"endColumn":54},{"ruleId":"43","severity":1,"message":"44","line":86,"column":21,"nodeType":"45","endLine":86,"endColumn":86},{"ruleId":"43","severity":1,"message":"44","line":49,"column":17,"nodeType":"45","endLine":49,"endColumn":33},{"ruleId":"43","severity":1,"message":"44","line":50,"column":17,"nodeType":"45","endLine":50,"endColumn":34},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'orderID' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]