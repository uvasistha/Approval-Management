[{"D:\\Project\\Personal\\Approval-Management\\my-app\\src\\App.js":"1","D:\\Project\\Personal\\Approval-Management\\my-app\\src\\Dash.js":"2","D:\\Project\\Personal\\Approval-Management\\my-app\\src\\AddPopup.js":"3","D:\\Project\\Personal\\Approval-Management\\my-app\\src\\EditPopup.js":"4","D:\\Project\\Personal\\Approval-Management\\my-app\\src\\Login.js":"5"},{"size":170,"mtime":1606297269629,"results":"6","hashOfConfig":"7"},{"size":10662,"mtime":1606558487692,"results":"8","hashOfConfig":"7"},{"size":4099,"mtime":1606486846775,"results":"9","hashOfConfig":"7"},{"size":3167,"mtime":1606486569959,"results":"10","hashOfConfig":"7"},{"size":2174,"mtime":1606561820318,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"210vi7",{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"D:\\Project\\Personal\\Approval-Management\\my-app\\src\\App.js",["24"],"D:\\Project\\Personal\\Approval-Management\\my-app\\src\\Dash.js",["25","26"],"D:\\Project\\Personal\\Approval-Management\\my-app\\src\\AddPopup.js",["27"],"D:\\Project\\Personal\\Approval-Management\\my-app\\src\\EditPopup.js",["28"],"import React from 'react';\r\n\r\nclass EditPopup extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            orderID : this.props.orderID,\r\n            orderAmount : this.props.orderAmount,\r\n            Notes : this.props.Notes,\r\n            approvalBy : this.props.approvalBy,\r\n            show :this.props.show,\r\n        }\r\n        this.onClose= this.onClose.bind(this)\r\n        this.onSave= this.onSave.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            orderID : nextProps.orderID,\r\n            orderAmount : nextProps.orderAmount,\r\n            Notes : nextProps.Notes,\r\n            approvalBy : nextProps.approvalBy,\r\n            show :nextProps.show,\r\n        });\r\n    }\r\n\r\n    onClose(){\r\n        this.setState({\r\n            orderID :\"\",\r\n            orderAmount : \"\",\r\n            Notes :\"\",\r\n            approvalBy :\"\",\r\n            show :false, \r\n        })\r\n        this.props.setShow()\r\n    }\r\n\r\n    onSave(){\r\n\r\n        //payload\r\n        console.log(this.state.orderID+this.state.orderAmount+this.state.Notes)\r\n        //send to backend\r\n        //CALL HERE\r\n        \r\n        //reset\r\n        this.setState({\r\n            orderID :\"\",\r\n            orderAmount : \"\",\r\n            Notes :\"\",\r\n            approvalBy :\"\",\r\n            show :false, \r\n        })\r\n        this.props.setShow()\r\n\r\n    }\r\n\r\n\r\n    //Text Changes\r\n    onIDchange(e){\r\n        this.setState({orderID:e.target.value})\r\n    }\r\n    onOrderAmount(e){\r\n        this.setState({orderAmount:e.target.value})\r\n        if(e.target.value<=10000 || e.target.value == \"\")\r\n        this.setState({approvalBy:\"David_Lee\"})\r\n        else if(e.target.value>10000 && e.target.value<=50000)\r\n        this.setState({approvalBy:\"Laura_Smith\"})\r\n        else\r\n        this.setState({approvalBy:\"Matthew_Vance\"})\r\n    }\r\n    onNotes(e){\r\n        this.setState({Notes:e.target.value})\r\n    }\r\n    onapprovalBy(e){\r\n        this.setState({approvalBy:e.target.value})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.show !== true)\r\n        return null\r\n        return(\r\n            <div>\r\n                <div>EDIT ORDER</div>\r\n                <div> <button onClick={this.onClose}>Close</button></div>\r\n                <div>\r\n                    Order ID\r\n                    <input type = \"text\" value={this.state.orderID} onChange={this.onIDchange.bind(this)} disabled/>\r\n                </div>\r\n                <div>\r\n                    Order Amount  \r\n                    <input type = \"text\" value={this.state.orderAmount} onChange={this.onOrderAmount.bind(this)}/>\r\n                </div>\r\n                <div>\r\n                    Notes\r\n                    <input type = \"text\" value={this.state.Notes} onChange={this.onNotes.bind(this)}/>\r\n                </div>\r\n                <div>\r\n                    Approval By\r\n                    <input type = \"text\" value={this.state.approvalBy} onChange={this.onapprovalBy.bind(this)} disabled/>\r\n                </div>\r\n                <button onClick={this.onSave}>SUBMIT</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EditPopup;","D:\\Project\\Personal\\Approval-Management\\my-app\\src\\Login.js",["29","30"],"import React from 'react';\r\nimport Dash from './Dash';\r\nimport HRC from './hrc-logo.svg'\r\nimport ARM from './human-machine-hand-homepage-invert.svg'\r\n\r\n\r\nclass Login extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            id : \"\",\r\n            pass : \"\",\r\n            level : -1,\r\n            allow :false\r\n        }\r\n    }\r\n\r\n    onId(e){\r\n        this.setState({id:e.target.value})\r\n    }\r\n    onPass(e){\r\n        this.setState({pass:e.target.value})\r\n    }\r\n    onLogin(){\r\n        if(this.state.id===\"David_Lee\")\r\n            this.setState({level:0})\r\n        else if(this.state.id===\"Laura_Smith\")\r\n            this.setState({level:1})\r\n        else if(this.state.id===\"Matthew_Vance\") \r\n            this.setState({level:2}) \r\n        else\r\n            this.setState({level:-1})\r\n        //BACEND VERIFY\r\n        console.log(this.state.id+this.state.pass)\r\n\r\n        //true\r\n        //this.setState({allow:true})\r\n\r\n        //false\r\n        //this.setState({allow:false})\r\n\r\n    }\r\n\r\n    render(){\r\n        if(!this.state.allow || this.state.level===-1)\r\n        return(\r\n            <div>\r\n                <img src={HRC}/>\r\n                <img src={ARM} />\r\n                    <div>\r\n                        <font size=\"5\" className = \"fontNormal\">Sign In</font><br/><br/>\r\n                        <font  className = \"fontNormal\">UserName</font><br/>\r\n                        <input className=\"textbox\" type = \"text\" value={this.state.id} onChange={this.onId.bind(this)}/><br/><br/>\r\n                        <font  className = \"fontNormal\">Password</font><br/>\r\n                        <input className=\"textbox\" type = \"password\" value={this.state.pass} onChange={this.onPass.bind(this)}/><br/><br/><br/>\r\n                        {this.state.id===\"\" || this.state.pass===\"\"?<button className=\"buttondisabled\" disabled>Sign In</button>:\r\n                        <button className=\"button\" onClick ={this.onLogin.bind(this)}>Sign In</button>}\r\n                    </div>\r\n            </div>\r\n        )\r\n        else\r\n        return(\r\n            <Dash level ={this.state.level}/>\r\n        )\r\n    }\r\n}\r\nexport default Login",{"ruleId":"31","severity":1,"message":"32","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":12},{"ruleId":"31","severity":1,"message":"35","line":111,"column":14,"nodeType":"33","messageId":"34","endLine":111,"endColumn":21},{"ruleId":"31","severity":1,"message":"35","line":124,"column":13,"nodeType":"33","messageId":"34","endLine":124,"endColumn":20},{"ruleId":"36","severity":1,"message":"37","line":82,"column":52,"nodeType":"38","messageId":"39","endLine":82,"endColumn":54},{"ruleId":"36","severity":1,"message":"37","line":65,"column":52,"nodeType":"38","messageId":"39","endLine":65,"endColumn":54},{"ruleId":"40","severity":1,"message":"41","line":49,"column":17,"nodeType":"42","endLine":49,"endColumn":33},{"ruleId":"40","severity":1,"message":"41","line":50,"column":17,"nodeType":"42","endLine":50,"endColumn":34},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'orderID' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]